---
- name: Install packages
  apt:
    name: "{{ packages }}"
    update_cache: true
  vars:
    packages:
      - gettext
      - gpg
      - librsync-dev
      - python-setuptools
      - python3-pip
      - python3-venv

- name: Create a virtual environment
  command:
    cmd: env python3 -m venv {{ duplicity_venv_path }}
    creates: "{{ duplicity_venv_path }}"

- name: Install Duplicity
  pip:
    executable: "{{ duplicity_venv_path }}/bin/pip"
    name:
      - duplicity
      - dropbox

- name: Create ~/bin directory
  file:
    path: ~/bin
    state: directory
    owner: root
    group: root
    mode: "700"

- name: Install backup scripts
  template:
    src: backup.sh.j2
    dest: ~/bin/backup_{{ ('duplicity_' + item.directory + item.repository)|hash('md5') }}.sh
    owner: root
    group: root
    mode: "700"
  with_items: "{{ duplicity_targets }}"
  when: item.state == 'present'
  loop_control:
    label: "{{ item.repository }}"

- name: Remove backup scripts
  file:
    path: ~/bin/backup_{{ ('duplicity_' + item.directory + item.repository)|hash('md5') }}.sh
    state: absent
  with_items: "{{ duplicity_targets }}"
  when: item.state == 'absent'
  loop_control:
    label: "{{ item.repository }}"

- name: Setup cronjobs
  cron:
    name: Backup {{ item.directory }} to {{ item.repository }}
    user: root
    month: "{{ item.cron_month|default(omit) }}"
    weekday: "{{ item.cron_weekday|default(omit) }}"
    day: "{{ item.cron_day|default(omit) }}"
    hour: "{{ item.cron_hour|default(omit) }}"
    minute: "{{ item.cron_minute|default(omit) }}"
    job: >
      {% if item.suppress_mail_on_success|default(True) %}chronic{% endif %}
      ~/bin/backup_{{ ('duplicity_' + item.directory + item.repository)|hash('md5') }}.sh
    state: "{{ item.state }}"
  with_items: "{{ duplicity_targets }}"
  loop_control:
    label: "{{ item.repository }}"
